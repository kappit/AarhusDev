@inherits Umbraco.Web.Macros.PartialViewMacroPage


@using System.Web.Mvc.Html
@using ClientDependency.Core.Mvc
@using Umbraco.Web
@using Umbraco.Web.Models
@using Umbraco.Web.Controllers

@{

    var registerModel = Members.CreateRegistrationModel("Member");
    
  
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    Html.RequiresJs("/umbraco_client/ui/jquery.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.min.js");
    Html.RequiresJs("/umbraco_client/Application/JQuery/jquery.validate.unobtrusive.min.js");
    
    var success = TempData["FormSuccess"] != null;
}

@*NOTE: This RenderJsHere code should be put on your main template page where the rest of your script tags are placed*@
@Html.RenderJsHere()

@if (success)
{
var m = Membership.GetUser();
var memberService = ApplicationContext.Current.Services.MemberService;
var member = memberService.GetByEmail(m.Email);
ApplicationContext.Current.Services.MemberService.AssignRole((int)m.ProviderUserKey, "ProspectMemberType");
<p>Registration succeeeded.</p>
<p>Logged in with @m.Email</p>
} else {

    using (Html.BeginUmbracoForm<UmbRegisterController>("HandleRegisterMember"))
    {
        <fieldset>
            <legend>Register</legend>

            @Html.ValidationSummary("registerModel", true)
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => registerModel.Username, new { @class = "form-control", placeholder = "Username" })
                    @Html.ValidationMessageFor(m => registerModel.Username)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => registerModel.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(m => registerModel.Email)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.PasswordFor(m => registerModel.Password, new { @class = "form-control", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => registerModel.Password)
                </div>
            </div>
            @if(registerModel.MemberProperties != null) {
                for (var i = 0; i < registerModel.MemberProperties.Count; i++)
                {
            <div class="form-group">
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => registerModel.MemberProperties[i].Value, new { @class = "form-control", placeholder = registerModel.MemberProperties[i].Name })
                    @Html.HiddenFor(m => registerModel.MemberProperties[i].Alias)
                </div>
            </div>
                }
            }
            <div class="form-group">
                <div class="col-sm-6">
                    <button class="btn btn-primary input-medium pull-left">Register</button>
                </div>
            </div>
        </fieldset>
     }
}